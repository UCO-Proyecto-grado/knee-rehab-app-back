name: Deploy to AWS Lambda - Dev

on:
  push:
    branches:
      - develop # O la rama que uses para desarrollo/despliegue automático

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    permissions: # Necesario si tu Action necesita interactuar con AWS
      id-token: write # Para autenticación OIDC con AWS
      contents: read

    steps:
      - name: Checkout código fuente
        uses: actions/checkout@v4 # Actualizado a v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4 # Actualizado a v4
        with:
          node-version: '18' # O la LTS más reciente que soporte Serverless Framework v3

      - name: Instalar Serverless Framework y serverless-python-requirements
        run: |
          npm install -g serverless@3
          npm install --save-dev serverless-python-requirements # Asegura que esté disponible para el empaquetado

      - name: Configurar Python
        uses: actions/setup-python@v5 # Actualizado a v5
        with:
          python-version: '3.12' # Alineado con el runtime de Lambda

      - name: Instalar dependencias Python (para tests o linters, opcional si solo despliegas)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt # Instala desde el requirements.txt raíz

      # Opcional: Ejecutar tests aquí si los tienes configurados
      # - name: Run tests
      #   run: pytest tests/

      - name: Configurar credenciales de AWS
        uses: aws-actions/configure-aws-credentials@v4 # Actualizado a v4
        with:
          aws-region: us-east-1 # La región donde desplegarás. Ajusta si es necesario.
          # Fallback a Access Keys si no usas OIDC (menos seguro)
          # aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          # aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: "Desplegar con Serverless (stage: dev)"
        run: sls deploy --stage dev
        env:
          # Si no usas OIDC y necesitas pasar las keys directamente (asegúrate de que AWS_ACCESS_KEY_ID y AWS_SECRET_ACCESS_KEY estén en los secrets del repo)
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # Si tus variables de entorno para la DB no vienen de SSM, y necesitas pasarlas en el deploy
          # DATABASE_HOST: ${{ secrets.DATABASE_HOST_DEV }} # Ejemplo